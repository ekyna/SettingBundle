<?xml version="1.0" encoding="UTF-8" ?>
<container
    xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services
                        http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="ekyna_setting.parameter.class">Ekyna\Bundle\SettingBundle\Entity\Parameter</parameter>
        <parameter key="ekyna_setting.parameter.repository.class">Ekyna\Bundle\SettingBundle\Entity\ParameterRepository</parameter>
        <parameter key="ekyna_setting.parameter.controller.class">Ekyna\Bundle\SettingBundle\Controller\Admin\ParameterController</parameter>
    </parameters>

    <services>

        <!-- Parameter resource services -->
        <service id="ekyna_setting.parameter.manager" alias="doctrine.orm.entity_manager" />
        <service id="ekyna_setting.parameter.repository"
            class="%ekyna_setting.parameter.repository.class%"
            factory-service="doctrine.orm.entity_manager"
            factory-method="getRepository">
            <argument>%ekyna_setting.parameter.class%</argument>
        </service>
        <service id="ekyna_setting.parameter.controller" class="%ekyna_setting.parameter.controller.class%">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>
        <service id="ekyna_setting.parameter.configuration"
                 class="Ekyna\Bundle\AdminBundle\Pool\Configuration"
                 factory-service="ekyna_admin.pool_factory"
                 factory-method="createConfiguration">
            <argument>ekyna_setting</argument>
            <argument>parameter</argument>
            <argument>%ekyna_setting.parameter.class%</argument>
            <argument type="collection" />
            <tag name="ekyna_admin.configuration" alias="ekyna_setting_parameter" />
        </service>

        <!-- Settings -->
        <service id="ekyna_setting.cache" alias="doctrine_cache.providers.ekyna_settings" />
        <service id="ekyna_setting.manager" class="Ekyna\Bundle\SettingBundle\Manager\SettingsManager">
            <argument type="service" id="ekyna_setting.schema_registry" />
            <argument type="service" id="ekyna_setting.parameter.manager" />
            <argument type="service" id="ekyna_setting.parameter.repository" />
            <argument type="service" id="ekyna_setting.cache" />
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="validator" />
        </service>

        <!-- Settings schema registry -->
        <service id="ekyna_setting.schema_registry" class="Ekyna\Bundle\SettingBundle\Schema\SchemaRegistry" />

        <!-- Redirection provider -->
        <service id="ekyna_setting.redirection_provider" class="Ekyna\Bundle\SettingBundle\Redirection\RedirectionProvider">
            <argument type="service" id="ekyna_setting.redirection.repository" />
            <tag name="ekyna_core.redirection_provider" />
        </service>

        <!-- Constraints validators -->
        <service id="ekyna_setting.validator.redirection_validator"
                 class="Ekyna\Bundle\SettingBundle\Validator\Constraints\RedirectionValidator">
            <argument type="service" id="request_stack" />
            <argument type="service" id="security.http_utils" />
            <tag name="validator.constraint_validator" alias="ekyna_setting_redirection" />
        </service>

        <!-- Twig extensions -->
        <service id="ekyna_setting.twig_extension" class="Ekyna\Bundle\SettingBundle\Twig\SettingsExtension">
            <argument type="service" id="ekyna_setting.manager" />
            <tag name="twig.extension" />
        </service>

    </services>

</container>
